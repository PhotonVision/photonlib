name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-host:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            artifact-name: Win64
          - os: macos-latest
            artifact-name: macOS
          - os: ubuntu-latest
            artifact-name: Linux

    runs-on: ${{ matrix.os }}
    name: "Build - ${{ matrix.artifact-name }}"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - run: ./gradlew build
        name: Build with Gradle
      - run: ./gradlew publish
        name: Publish
        env:
          ARTIFACTORY_API_KEY: ${{ secrets.ARTIFACTORY_API_KEY }}
        if: github.event_name == 'push'

  build-docker:
    strategy:
      fail-fast: false
      matrix:
        include:
          - container: wpilib/roborio-cross-ubuntu:2020-18.04
            artifact-name: Athena
          - container: wpilib/raspbian-cross-ubuntu:10-18.04
            artifact-name: Raspbian
          - container: wpilib/aarch64-cross-ubuntu:bionic-18.04
            artifact-name: Aarch64
      
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    name: "Build - ${{ matrix.artifact-name }}"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - run: ./gradlew build
        name: Build with Gradle
      - run: ./gradlew publish
        name: Publish
        env:
          ARTIFACTORY_API_KEY: ${{ secrets.ARTIFACTORY_API_KEY }}
        if: github.event_name == 'push'

  wpiformat:
    name: "wpiformat"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Fetch all history and metadata
        run: |
          git fetch --prune --unshallow
          git checkout -b pr
          git branch -f master origin/master
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install clang-format
        run: sudo apt-get update -q && sudo apt-get install clang-format-10
      - name: Install wpiformat
        run: pip3 install wpiformat
      - name: Run
        run: wpiformat -clang 10
      - name: Check Output
        run: git --no-pager diff --exit-code HEAD
